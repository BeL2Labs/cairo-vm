name: 

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Install-Toolchain:
    runs-on: ubuntu-20.04
    steps:
    - name: Install Toolchain
      uses: actions-rs/toolchain@v1
      with:
          toolchain: 1.61.0
          default: true
          components: rustfmt, clippy
    - name: Push Toolchain To Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.rustup/toolchains
          ~/.rustup/update-hashes
          ~/.rustup/settings.toml
        key: toolchain-${{ hashFiles('rust-toolchain') }}
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

  Compile-Cairo-Programs:
    runs-on: ubuntu-20.04
    - uses: actions/cache@v2
      with:
        path: |
          **/*.json
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/*.cairo') }}


  Cargo-Check:
    needs: Install-Toolchain
    runs-on: ubuntu-20.04
    steps:
      - name: Fetch Toolchain From Cache
      - name: Check All Targets Build
        run: cargo check --all-features --all-targets

  Cargo-Clippy:
    needs: Install-Toolchain
    runs-on: ubuntu-20.04
    steps:
      - name: Fetch Toolchain From Cache
      - name: Run Lint
        run: cargo check --all-features --all-targets

  build:
    runs-on: ubuntu-20.04
    steps:
    - name: Install Rust 1.61.0
      uses: actions-rs/toolchain@v1
      with:
          toolchain: 1.61.0
          override: true
          components: rustfmt, clippy
    - uses: actions/checkout@v3
    - name: Python3 Build
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install test dependencies
      run: pip install ecdsa fastecdsa sympy cairo-lang==0.9.1
    - name: format
      run: cargo fmt --all -- --check
    - name: Build
      run: make build
    - name: Run tests
      run: make test
    - name: Compare trace and memory
      run: make compare_trace_memory
    - name: Run clippy
      run: make clippy
    - name: Coverage
      run: make coverage
    - name: Cleanup tests
      run: make clean
    - name: Cache Codecov-report
      uses: actions//upload-artifact@master
      with:
        name: codecov-report
        path: target/tarpaulin
  upload-codecov:
    needs: build
    runs-on: ubuntu-20.04
    steps:
    - name: Retrieve cached report
      uses: actions/download-artifact@master
      with:
        name: codecov-report
        path: target/tarpaulin
    - name: Upload coverage to codecov.io
      uses: codecov/codecov-action@v2
      with:
        fail_ci_if_error:     true
name: Smoke Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ '*' ]

env:
  CARGO_TERM_COLOR: always

jobs:
  Check-Build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Install-Rust-Toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        default: true
        components: clippy
    - name: Check-Build
      uses: actions-rs/cargo@v1
      with:
        command: check
        args: --all-targets
    - name: Run-Clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: --all-features -D warnings
